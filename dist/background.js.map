{"version":3,"file":"background.js","mappingsnKA;AACA;AACA;AACA;AACA","sources":["webpack://4ndr0cookie/./src/background/service-worker.ts","webpack://4ndr0cookie/webpack/before-startup","webpack://4ndr0cookie/webpack/startup","webpack://4ndr0cookie/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nconsole.log('4ndr0tools Service Worker Loaded');\n// Initialize extension\nchrome.runtime.onInstalled.addListener(function () {\n    console.log('4ndr0tools extension installed');\n});\n// Handle Alt+C command for site clearance\nchrome.commands.onCommand.addListener(function (command) { return __awaiter(void 0, void 0, void 0, function () {\n    var tab_1, url, origin_1, settings, error_1, tab_2;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!(command === 'clear-site-data')) return [3 /*break*/, 9];\n                _a.label = 1;\n            case 1:\n                _a.trys.push([1, 7, , 9]);\n                return [4 /*yield*/, chrome.tabs.query({ active: true, currentWindow: true })];\n            case 2:\n                tab_1 = (_a.sent())[0];\n                if (!tab_1.url)\n                    return [2 /*return*/];\n                url = new URL(tab_1.url);\n                origin_1 = url.origin;\n                // Clear all site data\n                return [4 /*yield*/, chrome.browsingData.remove({ origins: [origin_1] }, {\n                        cookies: true,\n                        localStorage: true,\n                        indexedDB: true,\n                        webSQL: true,\n                        cache: true\n                    })];\n            case 3:\n                // Clear all site data\n                _a.sent();\n                if (!tab_1.id) return [3 /*break*/, 5];\n                return [4 /*yield*/, chrome.scripting.executeScript({\n                        target: { tabId: tab_1.id },\n                        func: function () {\n                            try {\n                                sessionStorage.clear();\n                            }\n                            catch (e) {\n                                console.log('SessionStorage clear failed:', e);\n                            }\n                        }\n                    })];\n            case 4:\n                _a.sent();\n                _a.label = 5;\n            case 5:\n                // Show success badge\n                chrome.action.setBadgeText({ text: '✓', tabId: tab_1.id });\n                chrome.action.setBadgeBackgroundColor({ color: '#15FFFF', tabId: tab_1.id });\n                // Clear badge after 2 seconds\n                setTimeout(function () {\n                    chrome.action.setBadgeText({ text: '', tabId: tab_1.id });\n                }, 2000);\n                return [4 /*yield*/, chrome.storage.sync.get(['autoReload'])];\n            case 6:\n                settings = _a.sent();\n                if (settings.autoReload !== false) {\n                    chrome.tabs.reload(tab_1.id);\n                }\n                return [3 /*break*/, 9];\n            case 7:\n                error_1 = _a.sent();\n                console.error('Site clearance failed:', error_1);\n                return [4 /*yield*/, chrome.tabs.query({ active: true, currentWindow: true })];\n            case 8:\n                tab_2 = (_a.sent())[0];\n                if (tab_2.id) {\n                    chrome.action.setBadgeText({ text: '✗', tabId: tab_2.id });\n                    chrome.action.setBadgeBackgroundColor({ color: '#FF4444', tabId: tab_2.id });\n                    setTimeout(function () {\n                        chrome.action.setBadgeText({ text: '', tabId: tab_2.id });\n                    }, 2000);\n                }\n                return [3 /*break*/, 9];\n            case 9: return [2 /*return*/];\n        }\n    });\n}); });\n// Handle messages from popup\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n    switch (request.action) {\n        case 'clearSiteData':\n            handleSiteClearance()\n                .then(function () { return sendResponse({ success: true }); })\n                .catch(function (error) { return sendResponse({ success: false, error: error.message }); });\n            return true;\n        default:\n            sendResponse({ success: false, error: 'Unknown action' });\n    }\n});\nfunction handleSiteClearance() {\n    return __awaiter(this, void 0, void 0, function () {\n        var tab, url, origin;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, chrome.tabs.query({ active: true, currentWindow: true })];\n                case 1:\n                    tab = (_a.sent())[0];\n                    if (!tab.url)\n                        throw new Error('No active tab');\n                    url = new URL(tab.url);\n                    origin = url.origin;\n                    return [4 /*yield*/, chrome.browsingData.remove({ origins: [origin] }, {\n                            cookies: true,\n                            localStorage: true,\n                            indexedDB: true,\n                            webSQL: true,\n                            cache: true\n                        })];\n                case 2:\n                    _a.sent();\n                    if (!tab.id) return [3 /*break*/, 4];\n                    return [4 /*yield*/, chrome.scripting.executeScript({\n                            target: { tabId: tab.id },\n                            func: function () { return sessionStorage.clear(); }\n                        })];\n                case 3:\n                    _a.sent();\n                    _a.label = 4;\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/background/service-worker.ts\"]();\n",""],"names":[],"sourceRoot":""}